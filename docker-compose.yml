version: '3.8'

services:
  # Redis for caching and background tasks
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # PostgreSQL database (optional - SQLite is default)
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: secscanx
      POSTGRES_USER: secscanx
      POSTGRES_PASSWORD: secscanx_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # SecScanX Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=sqlite:///secscanx.db
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-change-this
    volumes:
      - ./reports:/app/reports
      - ./logs:/app/logs
      - backend_data:/app/data
    depends_on:
      - redis
    networks:
      - secscanx

  # SecScanX Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - secscanx

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - secscanx

volumes:
  redis_data:
  postgres_data:
  backend_data:

networks:
  secscanx:
    driver: bridge
